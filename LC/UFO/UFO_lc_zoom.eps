%!PS-Adobe-2.0 EPSF-2.0
%%Title: UFO_lc_zoom.eps
%%Creator: gnuplot 5.0 patchlevel 6
%%CreationDate: Wed May  9 16:09:15 2018
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 716 338
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -60 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 716 50 lineto 716 338 lineto 50 338 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (UFO_lc_zoom.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 6)
  /Author (dmb)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed May  9 16:09:15 2018)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 180 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 13320.00 5760.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1080 576 M
63 0 V
11852 0 R
-63 0 V
stroke
972 576 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1080 851 M
63 0 V
11852 0 R
-63 0 V
stroke
972 851 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.005)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1080 1127 M
63 0 V
11852 0 R
-63 0 V
stroke
972 1127 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.01)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1080 1402 M
63 0 V
11852 0 R
-63 0 V
stroke
972 1402 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.015)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1080 1678 M
63 0 V
11852 0 R
-63 0 V
stroke
972 1678 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.02)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1080 1953 M
63 0 V
11852 0 R
-63 0 V
stroke
972 1953 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.025)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1080 2228 M
63 0 V
11852 0 R
-63 0 V
stroke
972 2228 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.03)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1080 2504 M
63 0 V
11852 0 R
-63 0 V
stroke
972 2504 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.035)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1080 2779 M
63 0 V
11852 0 R
-63 0 V
stroke
972 2779 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.04)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1080 576 M
0 63 V
0 2140 R
0 -63 V
stroke
1080 396 M
[ [(Helvetica) 180.0 0.0 true true 0 (55400)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
4059 576 M
0 63 V
0 2140 R
0 -63 V
stroke
4059 396 M
[ [(Helvetica) 180.0 0.0 true true 0 (55450)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
7038 576 M
0 63 V
0 2140 R
0 -63 V
stroke
7038 396 M
[ [(Helvetica) 180.0 0.0 true true 0 (55500)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
10016 576 M
0 63 V
0 2140 R
0 -63 V
stroke
10016 396 M
[ [(Helvetica) 180.0 0.0 true true 0 (55550)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
12995 576 M
0 63 V
0 2140 R
0 -63 V
stroke
12995 396 M
[ [(Helvetica) 180.0 0.0 true true 0 (55600)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1080 2779 N
0 -2203 V
11915 0 V
0 2203 V
-11915 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
126 1677 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 180.0 0.0 true true 0 (Ph. flux [ph cm-2 s-1])]
] -60.0 MCshow
grestore
LTb
LCb setrgbcolor
7037 126 M
[ [(Helvetica) 180.0 0.0 true true 0 (MJD)]
] -60.0 MCshow
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.00 0.00 0.00 C /Helvetica findfont 180 scalefont setfont
/vshift -60 def
4357 576 M
0 733 V
7137 717 M
0 1087 V
4357 865 CircleF
7137 1261 CircleF
% End plot #1
% Begin plot #2
1.000 UL
LTb
1.00 0.00 0.00 C /Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
1.00 0.00 0.00 C 1602 1029 M
-25 -49 V
-25 49 V
25 62 R
0 -111 V
stroke
gsave [] 0 setdash
1602 1029 M
-25 -49 V
-25 49 V
stroke
grestore
9917 676 M
0 -100 V
2780 54 R
0 -54 V
% End plot #2
stroke
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1080 2779 N
0 -2203 V
11915 0 V
0 2203 V
-11915 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
1080 5658 M
63 0 V
11852 0 R
-63 0 V
stroke
972 5658 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 17.3)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1080 5333 M
63 0 V
11852 0 R
-63 0 V
stroke
972 5333 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 17.35)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1080 5008 M
63 0 V
11852 0 R
-63 0 V
stroke
972 5008 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 17.4)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1080 4684 M
63 0 V
11852 0 R
-63 0 V
stroke
972 4684 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 17.45)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1080 4359 M
63 0 V
11852 0 R
-63 0 V
stroke
972 4359 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 17.5)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1080 4034 M
63 0 V
11852 0 R
-63 0 V
stroke
972 4034 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 17.55)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1080 3709 M
63 0 V
11852 0 R
-63 0 V
stroke
972 3709 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 17.6)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1080 3385 M
63 0 V
11852 0 R
-63 0 V
stroke
972 3385 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 17.65)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1080 3060 M
63 0 V
11852 0 R
-63 0 V
stroke
972 3060 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 17.7)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1080 3060 M
0 63 V
0 2535 R
0 -63 V
stroke
LTb
LCb setrgbcolor
4059 3060 M
0 63 V
0 2535 R
0 -63 V
stroke
LTb
LCb setrgbcolor
7038 3060 M
0 63 V
0 2535 R
0 -63 V
stroke
LTb
LCb setrgbcolor
10016 3060 M
0 63 V
0 2535 R
0 -63 V
stroke
LTb
LCb setrgbcolor
12995 3060 M
0 63 V
0 2535 R
0 -63 V
stroke
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1080 5658 N
0 -2598 V
11915 0 V
0 2598 V
-11915 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
126 4359 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 180.0 0.0 true true 0 (PTF r-mag)]
] -60.0 MCshow
grestore
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.00 0.00 0.00 C 2718 5132 M
0 -429 V
948 461 R
0 -350 V
3 143 R
0 -351 V
178 351 R
0 -377 V
3 383 R
0 -377 V
358 461 R
0 -389 V
223 338 R
0 -377 V
4 240 R
0 -351 V
182 403 R
0 -416 V
2 442 R
0 -416 V
1255 325 R
0 -338 V
3 436 R
0 -351 V
171 344 R
0 -390 V
3 280 R
0 -390 V
172 630 R
0 -676 V
540 403 R
0 -493 V
341 688 R
0 -455 V
6 202 R
0 -455 V
5 702 R
0 -442 V
5 260 R
0 -442 V
5 792 R
0 -467 V
38 -442 R
0 -584 V
5 1240 R
0 -468 V
7 721 R
0 -454 V
4 221 R
0 -455 V
43 533 R
0 -468 V
5 299 R
0 -429 V
5 442 R
0 -416 V
5 461 R
0 -403 V
5 475 R
0 -416 V
5 149 R
0 -480 V
34 1045 R
0 -688 V
5 364 R
0 -676 V
5 812 R
0 -676 V
11 799 R
0 -675 V
5 532 R
0 -714 V
35 448 R
0 -584 V
5 734 R
0 -559 V
5 981 R
0 -559 V
7 111 R
0 -559 V
4 675 R
0 -558 V
38 565 R
0 -675 V
9 759 R
0 -649 V
6 773 R
0 -650 V
5 591 R
0 -649 V
5 -513 R
0 -806 V
44 1702 R
0 -364 V
9 682 R
0 -363 V
6 318 R
0 -416 V
4271 -169 R
0 -428 V
4 337 R
0 -467 V
2718 4918 CircleF
3666 4989 CircleF
3669 4781 CircleF
3847 4768 CircleF
3850 4775 CircleF
4208 4853 CircleF
4431 4807 CircleF
4435 4684 CircleF
4617 4703 CircleF
4619 4729 CircleF
5874 4677 CircleF
5877 4768 CircleF
6048 4742 CircleF
6051 4632 CircleF
6223 4729 CircleF
6763 4547 CircleF
7104 4762 CircleF
7110 4508 CircleF
7115 4762 CircleF
7120 4580 CircleF
7125 4918 CircleF
7163 3950 CircleF
7168 4664 CircleF
7175 4924 CircleF
7179 4690 CircleF
7222 4762 CircleF
7227 4612 CircleF
7232 4632 CircleF
7237 4684 CircleF
7242 4749 CircleF
7247 4450 CircleF
7281 4911 CircleF
7286 4593 CircleF
7291 4729 CircleF
7302 4853 CircleF
7307 4690 CircleF
7342 4489 CircleF
7347 4651 CircleF
7352 5073 CircleF
7359 4625 CircleF
7363 4742 CircleF
7401 4690 CircleF
7410 4788 CircleF
7416 4911 CircleF
7421 4853 CircleF
7426 3612 CircleF
7470 4729 CircleF
7479 5047 CircleF
7485 4976 CircleF
11756 4385 CircleF
11760 4275 CircleF
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1080 5658 N
0 -2598 V
11915 0 V
0 2598 V
-11915 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
